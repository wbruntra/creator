{"version":3,"sources":["components/redux-helpers.js","components/EntryList.js","components/Compose.js","components/EntryDisplay.js","components/Signin.js","components/Landing.js","actions.js","components/Routes.js","serviceWorker.js","store.js","index.js"],"names":["mapStateToProps","state","user","connect","_ref","_useState","useState","entries","_useState2","Object","slicedToArray","data","setData","fetchData","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","axios","sent","stop","apply","this","arguments","deleteEntry","_ref3","_callee2","id","_context2","window","confirm","delete","concat","_x","useEffect","react_default","createElement","className","map","entry","i","key","react_router_dom","to","title","get","creator_email","onClick","TitleEntryForm","setTitle","draftTitle","setDraftTitle","onSubmit","e","preventDefault","onChange","target","value","placeholder","autoFocus","type","hidden","props","_useState3","_useState4","_useState5","_useState6","body","setBody","handleForm","match","params","isEmpty","post","email","profile","then","history","push","_result$data","initialized","style","flex","Fragment","justifyContent","EntryDisplay","setEntry","entryId","whiteSpace","url","setUrl","height","href","updateStatus","createAction","getStatus","dispatch","catch","err","console","log","react_router","path","exact","component","Landing","Compose","Signin","EntryList","Boolean","location","hostname","userReducer","createReducer","defineProperty","action","objectSpread","payload","store","configureStore","reducer","ReactDOM","render","es","Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7edfccac.chunk.js","sourcesContent":["export const mapStateToProps = state => {\n  return {\n    user: state.user,\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { get } from 'micro-dash';\nimport { connect } from 'react-redux';\nimport { mapStateToProps } from './redux-helpers';\n\nfunction App({ user }) {\n  const [data, setData] = useState({ entries: [] });\n\n  const fetchData = async () => {\n    const result = await axios('/api/entries');\n\n    setData(result.data);\n  };\n\n  const deleteEntry = async id => {\n    if (window.confirm('Delete?')) {\n      await axios.delete(`/api/entries/${id}`);\n      fetchData();\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        <div className=\"poem-box\">\n          <h2 className=\"title\">Available Works</h2>\n          <ul className=\"poem-list\">\n            {data.entries.map((entry, i) => {\n              return (\n                <li key={`entry-${i}`} className=\"entry-title\">\n                  <Link to={`/entries/${entry.id}`}>{entry.title}</Link>\n                  {get(user, ['profile', 'email']) === entry.creator_email && [\n                    ' ',\n                    <Link to={`/compose/${entry.id}`}>edit</Link>,\n                    ' ',\n                    <a\n                      onClick={() => {\n                        deleteEntry(entry.id);\n                      }}\n                    >\n                      del\n                    </a>,\n                  ]}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(App);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { isEmpty } from 'micro-dash';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapStateToProps } from './redux-helpers';\n\nfunction TitleEntryForm({ setTitle, draftTitle, setDraftTitle }) {\n  return (\n    <form\n      className=\"flex flex-child\"\n      onSubmit={e => {\n        e.preventDefault();\n        setTitle(draftTitle);\n      }}\n    >\n      <input\n        className=\"entry-title center-text flex-child\"\n        onChange={e => {\n          setDraftTitle(e.target.value);\n        }}\n        value={draftTitle}\n        placeholder=\"Enter Title Here\"\n        autoFocus={true}\n      />\n      <input type=\"submit\" hidden />\n    </form>\n  );\n}\n\nfunction Compose(props) {\n  const [draftTitle, setDraftTitle] = useState('');\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleForm = e => {\n    e.preventDefault();\n    const { id } = props.match.params;\n\n    if (!isEmpty(id)) {\n      axios\n        .post('/api/entries/edit', {\n          id,\n          title,\n          body,\n        })\n        .then(props.history.push('/entries'));\n    } else {\n      axios\n        .post('/api/entries/new', {\n          title,\n          body,\n          email: props.user.profile.email,\n        })\n        .then(props.history.push('/entries'));\n    }\n\n    setTitle('');\n    setDraftTitle('');\n    setBody('');\n  };\n\n  useEffect(() => {\n    const { id } = props.match.params;\n\n    const fetchData = async () => {\n      const result = await axios(`/api/entries/${id}`);\n\n      const { title, body } = result.data;\n      setTitle(title);\n      setBody(body);\n    };\n\n    if (!isEmpty(id)) {\n      fetchData();\n    }\n  }, [props.match.params]);\n\n  if (!props.user.initialized) {\n    return null;\n  }\n\n  if (isEmpty(props.user.profile)) {\n    props.history.push('/signin');\n  }\n\n  return (\n    <div className=\"composer\">\n      <div\n        className={`flex-child flex full vertical ${\n          isEmpty(title) ? 'center' : 'stretch'\n        }`}\n        style={{ flex: 5 }}\n      >\n        {isEmpty(title) ? (\n          <TitleEntryForm\n            setTitle={setTitle}\n            draftTitle={draftTitle}\n            setDraftTitle={setDraftTitle}\n          />\n        ) : (\n          <>\n            <h2 className=\"flex-child entry-title\">{title}</h2>\n            <form\n              style={{ justifyContent: 'space-between' }}\n              className=\"flex flex-child\"\n              onSubmit={handleForm}\n            >\n              <textarea\n                autoFocus={true}\n                // placeholder=\"Start writing...\"\n                value={body}\n                onChange={e => {\n                  setBody(e.target.value);\n                }}\n              />\n            </form>\n          </>\n        )}\n      </div>\n      {!isEmpty(title) && (\n        <div className=\"sidebar flex-child flex vertical\" style={{ flex: 1 }}>\n          <div className=\"flex-child\">\n            <button\n              className=\"btn btn-white\"\n              onClick={handleForm}\n              type=\"submit\"\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(Compose);\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction EntryDisplay({ match }) {\n  const [entry, setEntry] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const entryId = match.params.id;\n      const result = await axios(`/api/entries/${entryId}`);\n      // const entryBody = result.data.body.replace(/\\n/g, '<br />');\n\n      setEntry(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        <div className=\"poem-box\">\n          <h2 className=\"title\">{entry.title}</h2>\n          <p style={{ whiteSpace: 'pre' }}>{entry.body}</p>\n        </div>\n      </div>\n      {/* <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div> */}\n    </div>\n  );\n}\n\nexport default EntryDisplay;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction EntryDisplay({ match }) {\n  const styles = {\n    margin: '28px auto',\n    maxWidth: '760px',\n  };\n\n  const [url, setUrl] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`/api/google/link`);\n      setUrl(result.data.url);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"composer\">\n      <div style={{ height: '50vh' }} className=\"flex vertical flex-child\">\n        <p className=\"entry-title center-text flex-child\">\n          Welcome! To write something, please <a href={url}>sign in</a> with\n          your Google account.\n        </p>\n        <p className=\"entry-title center-text flex-child\">\n          Or you can just <Link to=\"/entries\">read</Link> the available works.\n        </p>\n      </div>\n\n      <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EntryDisplay;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction EntryDisplay({ match }) {\n  const styles = {\n    margin: '28px auto',\n    maxWidth: '760px',\n  };\n\n  return (\n    <div className=\"composer\">\n      <div style={{ height: '30vh' }} className=\"flex vertical flex-child\">\n        <p className=\"entry-title center-text flex-child\">\n          <Link to=\"/compose\">Create</Link>\n        </p>\n        <p className=\"entry-title center-text flex-child\">\n          <Link to=\"/entries\">Read</Link>\n        </p>\n      </div>\n\n      <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EntryDisplay;\n","import { createAction } from 'redux-starter-kit';\nimport axios from 'axios';\n\nexport const updateStatus = createAction('user/status');\n\nexport const getStatus = () => dispatch => {\n  return axios\n    .get('/api/users/status')\n    .then(({ data }) => dispatch(updateStatus(data)))\n    .catch(err => {\n      console.log('An error occurred');\n    });\n};\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport EntryList from './EntryList';\nimport Compose from './Compose';\nimport EntryDisplay from './EntryDisplay';\nimport Signin from './Signin';\nimport Landing from './Landing';\nimport { connect } from 'react-redux';\nimport { getStatus } from '../actions';\nimport { mapStateToProps } from './redux-helpers';\n\nfunction AppRouter({ getStatus }) {\n  useEffect(() => {\n    getStatus();\n  }, [getStatus]);\n\n  return (\n    <Router>\n      <>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/compose\">Compose</Link>\n            </li>\n            <li>\n              <Link to=\"/entries\">See Entries</Link>\n            </li>\n          </ul>\n        </nav> */}\n\n        <Route path=\"/\" exact component={Landing} />\n        <Route path=\"/compose/:id?\" exact component={Compose} />\n        <Route path=\"/signin\" exact component={Signin} />\n        <Route path=\"/entries\" exact component={EntryList} />\n        <Route path=\"/entries/:id\" component={EntryDisplay} />\n      </>\n    </Router>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  { getStatus }\n)(AppRouter);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore, createReducer } from 'redux-starter-kit';\nimport { updateStatus } from './actions';\n\nconst initialState = { initialized: false };\n\nconst userReducer = createReducer(initialState, {\n  [updateStatus]: (state, action) => {\n    return {\n      initialized: true,\n      ...action.payload,\n    };\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport App from './components/Routes';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}