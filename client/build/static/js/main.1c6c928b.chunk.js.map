{"version":3,"sources":["components/EntryList.js","components/redux-helpers.js","components/Compose.js","components/EntryDisplay.js","components/Signin.js","actions.js","components/Routes.js","serviceWorker.js","store.js","index.js"],"names":["App","_useState","useState","entries","_useState2","Object","slicedToArray","data","setData","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","axios","sent","console","log","stop","apply","this","arguments","fetchData","react_default","createElement","className","map","entry","i","key","concat","react_router_dom","to","id","title","mapStateToProps","state","user","TitleEntryForm","setTitle","draftTitle","setDraftTitle","onSubmit","e","preventDefault","onChange","target","value","placeholder","autoFocus","type","hidden","connect","props","_useState3","_useState4","_useState5","_useState6","body","setBody","initialized","isEmpty","profile","history","push","handleForm","post","email","then","style","flex","Fragment","justifyContent","onClick","EntryDisplay","match","setEntry","_ref2","entryId","params","whiteSpace","url","setUrl","height","href","updateStatus","createAction","getStatus","dispatch","get","catch","err","react_router","path","exact","component","Compose","Signin","EntryList","Boolean","window","location","hostname","userReducer","createReducer","defineProperty","action","objectSpread","payload","store","configureStore","reducer","ReactDOM","render","es","Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c6c928b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState({ entries: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('/api/entries');\n\n      console.log(result.data);\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  console.log(data);\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        <div className=\"poem-box\">\n          <h2 className=\"title\">Available Works</h2>\n          <ul className=\"poem-list\">\n            {data.entries.map((entry, i) => {\n              return (\n                <li key={`entry-${i}`} className=\"entry-title\">\n                  <Link to={`/entries/${entry.id}`}>{entry.title}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const mapStateToProps = state => {\n  return {\n    user: state.user,\n  };\n};\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { isEmpty } from 'micro-dash';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapStateToProps } from './redux-helpers';\n\nfunction TitleEntryForm({ setTitle, draftTitle, setDraftTitle }) {\n  return (\n    <form\n      className=\"flex flex-child\"\n      onSubmit={e => {\n        e.preventDefault();\n        setTitle(draftTitle);\n      }}\n    >\n      <input\n        className=\"entry-title center-text flex-child\"\n        onChange={e => {\n          setDraftTitle(e.target.value);\n        }}\n        value={draftTitle}\n        placeholder=\"Enter Title Here\"\n        autoFocus={true}\n      />\n      <input type=\"submit\" hidden />\n    </form>\n  );\n}\n\nfunction Compose(props) {\n  const [draftTitle, setDraftTitle] = useState('');\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  if (!props.user.initialized) {\n    return null;\n  }\n\n  if (isEmpty(props.user.profile)) {\n    props.history.push('/signin');\n  }\n\n  const handleForm = e => {\n    e.preventDefault();\n    axios\n      .post('/api/entries/new', {\n        title,\n        body,\n        email: props.user.profile.email,\n      })\n      .then(props.history.push('/entries'));\n    setTitle('');\n    setDraftTitle('');\n    setBody('');\n  };\n\n  return (\n    <div className=\"composer\">\n      <div\n        className={`flex-child flex full vertical ${\n          isEmpty(title) ? 'center' : 'stretch'\n        }`}\n        style={{ flex: 5 }}\n      >\n        {isEmpty(title) ? (\n          <TitleEntryForm\n            setTitle={setTitle}\n            draftTitle={draftTitle}\n            setDraftTitle={setDraftTitle}\n          />\n        ) : (\n          <>\n            <h2 className=\"flex-child entry-title\">{title}</h2>\n            <form\n              style={{ justifyContent: 'space-between' }}\n              className=\"flex flex-child\"\n              onSubmit={handleForm}\n            >\n              <textarea\n                autoFocus={true}\n                // placeholder=\"Start writing...\"\n                value={body}\n                onChange={e => {\n                  setBody(e.target.value);\n                }}\n              />\n            </form>\n          </>\n        )}\n      </div>\n      {!isEmpty(title) && (\n        <div className=\"sidebar flex-child flex vertical\" style={{ flex: 1 }}>\n          <div className=\"flex-child\">\n            <button\n              className=\"btn btn-white\"\n              onClick={handleForm}\n              type=\"submit\"\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(Compose);\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction EntryDisplay({ match }) {\n  const [entry, setEntry] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const entryId = match.params.id;\n      const result = await axios(`/api/entries/${entryId}`);\n      // const entryBody = result.data.body.replace(/\\n/g, '<br />');\n\n      setEntry(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        <div className=\"poem-box\">\n          <h2 className=\"title\">{entry.title}</h2>\n          <p style={{ whiteSpace: 'pre' }}>{entry.body}</p>\n        </div>\n      </div>\n      {/* <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div> */}\n    </div>\n  );\n}\n\nexport default EntryDisplay;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction EntryDisplay({ match }) {\n  const styles = {\n    margin: '28px auto',\n    maxWidth: '760px',\n  };\n\n  const [url, setUrl] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`/api/google/link`);\n      setUrl(result.data.url);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"composer\">\n      <div style={{ height: '50vh' }} className=\"flex vertical flex-child\">\n        <p className=\"entry-title center-text flex-child\">\n          Welcome! To write something, please <a href={url}>sign in</a> with\n          your Google account.\n        </p>\n        <p className=\"entry-title center-text flex-child\">\n          Or you can just <Link to=\"/entries\">read</Link> the available works.\n        </p>\n      </div>\n\n      <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EntryDisplay;\n","import { createAction } from 'redux-starter-kit';\nimport axios from 'axios';\n\nexport const updateStatus = createAction('user/status');\n\nexport const getStatus = () => dispatch => {\n  return axios\n    .get('/api/users/status')\n    .then(({ data }) => dispatch(updateStatus(data)))\n    .catch(err => {\n      console.log('An error occurred');\n    });\n};\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport EntryList from './EntryList';\nimport Compose from './Compose';\nimport EntryDisplay from './EntryDisplay';\nimport Signin from './Signin';\nimport { connect } from 'react-redux';\nimport { getStatus } from '../actions';\nimport { mapStateToProps } from './redux-helpers';\n\nfunction AppRouter({ getStatus }) {\n  useEffect(() => {\n    getStatus();\n  }, [getStatus]);\n\n  return (\n    <Router>\n      <>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/compose\">Compose</Link>\n            </li>\n            <li>\n              <Link to=\"/entries\">See Entries</Link>\n            </li>\n          </ul>\n        </nav> */}\n\n        <Route path=\"/\" exact component={Compose} />\n        <Route path=\"/signin\" exact component={Signin} />\n        <Route path=\"/entries\" exact component={EntryList} />\n        <Route path=\"/entries/:id\" component={EntryDisplay} />\n      </>\n    </Router>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  { getStatus }\n)(AppRouter);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore, createReducer } from 'redux-starter-kit';\nimport { updateStatus } from './actions';\n\nconst initialState = { initialized: false };\n\nconst userReducer = createReducer(initialState, {\n  [updateStatus]: (state, action) => {\n    return {\n      initialized: true,\n      ...action.payload,\n    };\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport App from './components/Routes';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}