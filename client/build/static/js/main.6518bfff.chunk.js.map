{"version":3,"sources":["components/App.js","components/Compose.js","components/EntryDisplay.js","components/Signin.js","components/Routes.js","serviceWorker.js","index.js"],"names":["App","_useState","useState","entries","_useState2","Object","slicedToArray","data","setData","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","axios","sent","console","log","stop","apply","this","arguments","fetchData","react_default","createElement","className","map","entry","i","key","concat","react_router_dom","to","id","title","TitleEntryForm","setTitle","draftTitle","setDraftTitle","onSubmit","e","preventDefault","onChange","target","value","placeholder","autoFocus","type","hidden","Compose","props","_useState3","_useState4","_useState5","_useState6","body","setBody","handleForm","post","then","history","push","isEmpty","style","flex","Fragment","justifyContent","onClick","EntryDisplay","match","setEntry","_ref2","entryId","params","whiteSpace","url","setUrl","margin","maxWidth","href","AppRouter","react_router","path","exact","component","Signin","Main","Boolean","window","location","hostname","ReactDOM","render","Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6518bfff.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState({ entries: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('/api/entries');\n\n      console.log(result.data);\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  console.log(data);\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        <div className=\"poem-box\">\n          <h2 className=\"title\">Available Works</h2>\n          <ul className=\"poem-list\">\n            {data.entries.map((entry, i) => {\n              return (\n                <li key={`entry-${i}`} className=\"entry-title\">\n                  <Link to={`/entries/${entry.id}`}>{entry.title}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { isEmpty } from 'micro-dash';\n\nfunction TitleEntryForm({ setTitle, draftTitle, setDraftTitle }) {\n  return (\n    <form\n      className=\"flex flex-child\"\n      onSubmit={e => {\n        e.preventDefault();\n        setTitle(draftTitle);\n      }}\n    >\n      <input\n        className=\"entry-title center-text flex-child\"\n        onChange={e => {\n          setDraftTitle(e.target.value);\n        }}\n        value={draftTitle}\n        placeholder=\"Enter Title Here\"\n        autoFocus={true}\n      />\n      <input type=\"submit\" hidden />\n    </form>\n  );\n}\n\nfunction Compose(props) {\n  const [draftTitle, setDraftTitle] = useState('');\n\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleForm = e => {\n    e.preventDefault();\n    axios\n      .post('/api/entries/new', {\n        title,\n        body,\n      })\n      .then(props.history.push('/entries'));\n    setTitle('');\n    setDraftTitle('');\n    setBody('');\n  };\n\n  // useEffect(() => {\n  //   const handleResize = () => {\n  //     const textHeight = formEl.current ? formEl.current.offsetHeight : 0;\n  //     console.log('Form height', formEl.current.offsetHeight);\n  //   };\n  //   window.addEventListener('resize', handleResize);\n  //   return () => {\n  //     window.removeEventListener('resize', handleResize);\n  //   };\n  // }, []);\n\n  return (\n    <div className=\"composer\">\n      <div\n        className={`flex-child flex full vertical ${\n          isEmpty(title) ? 'center' : 'stretch'\n        }`}\n        style={{ flex: 5 }}\n      >\n        {isEmpty(title) ? (\n          <TitleEntryForm\n            setTitle={setTitle}\n            draftTitle={draftTitle}\n            setDraftTitle={setDraftTitle}\n          />\n        ) : (\n          <>\n            <h2 className=\"flex-child entry-title\">{title}</h2>\n            <form\n              style={{ justifyContent: 'space-between' }}\n              className=\"flex flex-child\"\n              onSubmit={handleForm}\n            >\n              <textarea\n                autoFocus={true}\n                // placeholder=\"Start writing...\"\n                value={body}\n                onChange={e => {\n                  setBody(e.target.value);\n                }}\n              />\n            </form>\n          </>\n        )}\n      </div>\n      {!isEmpty(title) && (\n        <div className=\"sidebar flex-child flex vertical\" style={{ flex: 1 }}>\n          <div className=\"flex-child\">\n            <button\n              className=\"btn btn-white\"\n              onClick={handleForm}\n              type=\"submit\"\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Compose;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction EntryDisplay({ match }) {\n  const [entry, setEntry] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const entryId = match.params.id;\n      const result = await axios(`/api/entries/${entryId}`);\n      // const entryBody = result.data.body.replace(/\\n/g, '<br />');\n\n      setEntry(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        <div className=\"poem-box\">\n          <h2 className=\"title\">{entry.title}</h2>\n          <p style={{ whiteSpace: 'pre' }}>{entry.body}</p>\n        </div>\n      </div>\n      {/* <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div> */}\n    </div>\n  );\n}\n\nexport default EntryDisplay;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction EntryDisplay({ match }) {\n  const styles = {\n    margin: '28px auto',\n    maxWidth: '760px',\n  };\n\n  const [url, setUrl] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`/api/google/link`);\n      setUrl(result.data.url);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <div style={styles} className=\"container\">\n        <button>\n          <a href={url}>Sign in</a>\n        </button>\n      </div>\n      <div className=\"foot right-align\">\n        <p>Created by William Bruntrager</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EntryDisplay;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Main from './App';\nimport Compose from './Compose';\nimport EntryDisplay from './EntryDisplay';\nimport Signin from './Signin';\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/compose\">Compose</Link>\n            </li>\n            <li>\n              <Link to=\"/entries\">See Entries</Link>\n            </li>\n          </ul>\n        </nav> */}\n\n        <Route path=\"/\" exact component={Compose} />\n        <Route path=\"/signin\" exact component={Signin} />\n        <Route path=\"/entries\" exact component={Main} />\n        <Route path=\"/entries/:id\" component={EntryDisplay} />\n      </>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}